version: '3'
services:

  proxy: ## Proxy Image
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    #
    # deprecating links and referring to 'divseek' network?
    #
    #links:
    #   - remoteuser
    #    - apollo
    #    - galaxy
    #    - tripal
    #    #- ngadmin
    #    - chado_jb
    #    - jbrowse
    #    - jbrowse-graphql
    #    - postgrest
    #    #- postgrest_tripal
    #    - postgraphql
    #    - pgadmin4
    networks:
      divseek:
    volumes:
      - ./nginx:/etc/nginx/conf.d
      # Compose workaround for strange file resolution issue for NGINX include directive
      - ./nginx/service.locations:/etc/nginx/service.locations
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - galaxy
      - tripal
      - apollo
      - jbrowse
      - jbrowse-graphql
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  remoteuser: ## Remote User Proxy for Apollo (based on Galaxy Auth)
    image: "quay.io/erasche/gx-cookie-proxy:latest"
    environment:
      GALAXY_DB_URL: "postgresql://galaxy:galaxy@galaxy:5432/galaxy?client_encoding=utf8&sslmode=disable"
      GALAXY_SECRET: "0xD1v533kCanuck"
      GXC_BACKEND_URL: "apollo:8080"
      GXC_LOGLEVEL: DEBUG
    networks:
      divseek:
    depends_on:
      - galaxy
      - apollo
    #
    # deprecating links and referring to explicit 'divseek' network?
    #
    # links:
    #  - galaxy:galaxy


  galaxy: ## Galaxy, yay!
    image: quay.io/galaxy-genome-annotation/docker-galaxy-annotation:master
    environment:
        NONUSE: nodejs,proftp,reports
        GALAXY_LOGGING: full
        GALAXY_CONFIG_BRAND: "GMOD"
        GALAXY_WEBAPOLLO_URL: "http://apollo:8080/apollo"
        GALAXY_WEBAPOLLO_EXT_URL: "/apollo"
        GALAXY_WEBAPOLLO_PASSWORD: "password"
        GALAXY_WEBAPOLLO_USER: admin@local.host
        GALAXY_SHARED_DIR: /apollo-data
        GALAXY_JBROWSE_SHARED_DIR: /jbrowse/data
        GALAXY_ID_SECRET: "0xD1v533kCanuck"
        GALAXY_CHADO_DBHOST: chado

        # added this following abretaud comment on 20 Dec 2018 at
        # https://github.com/galaxy-genome-annotation/dockerized-gmod-deployment/issues/17
        #GALAXY_CONFIG_COOKIE_PATH: /galaxy
        #PROXY_PREFIX: /galaxy
        #GALAXY_WEBAPOLLO_EXT_URL: "/galaxy/apollo"

    networks:
      divseek:
    volumes:
        - "../volumes/galaxy:/export"
        - "./galaxy.ini:/etc/galaxy/galaxy.ini"

  apollo: ## Apollo, the genome annotation suite
    image: quay.io/erasche/apollo:remote_user
      #
      # deprecating links and referring to 'divseek' network?
      #
      # links:
      # "apollo_db"
      # "chado"
    environment:
      CONTEXT_PATH: "apollo"
      WEBAPOLLO_DB_USERNAME: postgres
      WEBAPOLLO_DB_PASSWORD: postgres
      WEBAPOLLO_DB_DRIVER: "org.postgresql.Driver"
      WEBAPOLLO_DB_DIALECT: "org.hibernate.dialect.PostgresPlusDialect"
      WEBAPOLLO_DB_URI: "jdbc:postgresql://apollo_db/postgres"
      WEBAPOLLO_CHADO_DB_USERNAME: postgres
      WEBAPOLLO_CHADO_DB_PASSWORD: postgres
      WEBAPOLLO_CHADO_DB_DRIVER: "org.postgresql.Driver"
      WEBAPOLLO_CHADO_DB_DIALECT: "org.hibernate.dialect.PostgresPlusDialect"
      WEBAPOLLO_CHADO_DB_URI: "jdbc:postgresql://chado/postgres"
      # Optional, allow image to 'wait'
      WEBAPOLLO_DB_HOST: apollo_db
      WEBAPOLLO_DB_PORT: 5432
      WEBAPOLLO_DB_NAME: postgres
      WEBAPOLLO_CHADO_DB_HOST: chado
      WEBAPOLLO_CHADO_DB_PORT: 5432
      WEBAPOLLO_CHADO_DB_NAME: postgres
      # Configure admin user email
      APOLLO_ADMIN_EMAIL: "${DC_ADMIN_EMAIL}"

      # added this following abretaud comment on 20 Dec 2018 at
      # https://github.com/galaxy-genome-annotation/dockerized-gmod-deployment/issues/17
      APOLLO_PATH_PREFIX: "/apollo/"

    networks:
      divseek:
    depends_on:
        - galaxy
        - apollo_db
    volumes:
      - "../volumes/galaxy:/export"
      - "./galaxy.ini:/etc/galaxy/galaxy.ini"

  apollo_db: ## Apollo's Postgres DB
    image: postgres:9.5
    environment:
      POSTGRES_PASSWORD: postgres
    networks:
      divseek:
    volumes:
        - "../volumes/apollo:/var/lib/postgresql/data/"

  postgrest:
    image: quay.io/erasche/postgrest:latest
    environment:
      POSTGREST_JWT_SECRET: thisisnotarealsecret
      POSTGREST_SCHEMA: chado
      PG_PASSWORD: postgres
      PG_DB: postgres
    #
    # deprecating links and referring to 'divseek' network?
    #
    # links:
    #  - "chado:db"
    networks:
      divseek:
    depends_on:
      - chado

  #
  # March 19, 2019 - strange error with PostGraphQL start-up,
  # so I'll turn it off for now (also in the NGINX service.locations)
  #
  #postgraphql: ## GraphQL interface to Postgres
  #  image: erasche/postgraphql:gmod-hacks
  #  environment:
  #      DB_GRAPHQL_PATH: "/graphql"
  #      DB_GRAPHIQL_PATH: "/graphiql"
  #      PG_SECRET: "0xD1v533kCanuck"
  #      PGUSER: postgres
  #      PGPASSWORD: postgres
  #      PGHOST: chado
  #      PGPORT: 5432
  #      PGDATABASE: postgres
  #      DB_SCHEMA: "public,chado"
  #
  # deprecating links and referring to 'divseek' network?
  #
  # links:
  #    - "chado"
  #  networks:
  #    divseek:
  #  depends_on:
  #    - chado

  #
  # March 19, 2019 - strange error with PostGraphQL start-up,
  # so I'll turn it off for now (also in the docker-compose.yml build)
  # plus all services here calling it (above and below)
  #
  #postgraphql-refseqs: ## PostGraphQL refseq server (required for JBrowse integration)
  #  build: refseqs
  #  environment:
  #    PGUSER: postgres
  #    PGPASSWORD: postgres
  #    PGHOST: chado
  #    PGPORT: 5432
  #    PGDATABASE: postgres
  #
  # deprecating links and referring to 'divseek' network?
  #
  # links:
  #    - "chado:db"
  #  networks:
  #    divseek:
  #  depends_on:
  #    - chado

  pgadmin4: ## Postgres Admin Site
    image: thajeztah/pgadmin4
    ports:
        - 8201:5050
    #
    # replacing deprecated 'links' with chado service network aliases?
    #
    #links:
    # - "apollo_db:apollo"
    # - "chado:tripal"
    networks:
      divseek:
    volumes:
        - "./pgadmin4.db:/pgadmin/config/pgadmin4.db"
    depends_on:
      - apollo_db
      - chado

  #ngadmin:
    #image: quay.io/erasche/chado-angular-admin:latest
    #links:
      #- "postgrest"
      #- "postgrest_tripal"
    #ports:
      #- "8400:80"

  chado_jb:
    image: quay.io/erasche/chado-jbrowse-connector:latest
    environment:
      POSTGRES_PASSWORD: postgres
      #
      # Production NGINX needs to proxy to distinct container host server ports
      #
      # NGINX should proxy jbrowse to staging server port 8203
      #
      SITE_PATH: "${DC_BASE_URL_PROTO}${DC_SITE_BASE_HOSTNAME}/jbrowse/"
      #
      # NGINX should proxy jbrowse_actual to staging server port 8202
      #
      JBROWSE:   "${DC_BASE_URL_PROTO}${DC_SITE_BASE_HOSTNAME}/jbrowse_actual/"
    ports:
      - "8202:8500"
    #
    # replacing deprecated 'links' with chado service network aliases?
    #
    #links:
    #  - "tripal_db:db"
    networks:
      divseek:
    depends_on:
      - chado

  chado:  # Tripal's Chado Database
    image: quay.io/galaxy-genome-annotation/chado:1.31-jenkins21-pg9.5
    environment:
      POSTGRES_PASSWORD: "postgres"
      # The default chado image would try to install the schema on first run, we just want the tools to be available.
      # The reason why is because Tripal will install the schema for us, but won't be able to run if there's an existing schema
      INSTALL_CHADO_SCHEMA: 0
      INSTALL_YEAST_DATA: 0
      PGDATA: "/var/lib/postgresql/data/"
    networks:
      divseek:
        aliases:
          - db
          - tripal
    volumes:
      - ../volumes/tripal/db:/var/lib/postgresql/data/

  tripal:
    build:
      context: ./divseek_canada
      dockerfile: Dockerfile
      args:
        DIVSEEK_ADMIN_USER: "${DC_ADMIN_USER}"
        DIVSEEK_DB_HOST: "chado"
    volumes:
      - ../volumes/tripal/sites:/var/www/html/sites
      - ../volumes/tripal/private:/var/www/private
    environment:
      UPLOAD_LIMIT: 20M
      MEMORY_LIMIT: 128M
      DB_HOST:  "chado"
      DB_NAME: "postgres"
      #
      SITE_NAME:      "${DC_SITE_NAME}"
      BASE_URL_PROTO: "${DC_BASE_URL_PROTO}"
      BASE_URL_PATH:  "${DC_BASE_URL_PATH}"
      BASE_URL:       "${DC_BASE_URL_PROTO}${DC_SITE_BASE_HOSTNAME}${DC_BASE_URL_PATH}"
      #
      TRIPAL_GIT_CLONE_LIBRARIES: "https://github.com/galaxyproject/blend4php.git
                                   https://github.com/SystemDevil/PHP_XLSXWriter_plus.git
                                   https://github.com/elastic/elasticsearch-php.git
                                   https://github.com/d3/d3.git"
                                  #elasticsearch recommends composer, but maybe this will work too
      TRIPAL_DOWNLOAD_MODULES:    "bootstrap maillog smtp jquery_update panels advanced_help"
      TRIPAL_GIT_CLONE_MODULES:   "https://github.com/tripal/tripal_jbrowse.git
                                   https://github.com/tripal/brapi.git
                                   https://github.com/tripal/trpdownload_api.git
                                   https://github.com/tripal/tripal_jbrowse.git
                                   https://github.com/uofs-pulse-binfo/vcf_filter.git
                                   https://github.com/UofS-Pulse-Binfo/analyzedphenotypes.git
                                   https://github.com/tripal/tripal_elasticsearch.git
                                   https://github.com/tripal/trpfancy_fields.git"
                                   #https://github.com/UofS-Pulse-Binfo/nd_genotypes.git
                                   #https://github.com/UofS-Pulse-Binfo/genotypes_loader.git"

      TRIPAL_ENABLE_MODULES: "bootstrap maillog smtp jquery_update panels advanced_help page_manager tracker forum
                              tripal_jbrowse tripal_galaxy brapi tripal_jbrowse_mgmt
                              trpfancy_fields dragndrop_upload vcf_filter analyzedphenotypes tripal_elasticsearch"
                              #
                              # ignore nd_genotypes for now...
                              #
                              #nd_genotypes genotypes_loader
                              #
                              # Avoiding a strange  runtime error with tripal_bulk_loader by NOT enabling it for now
                              # tripal_bulk_loader"
      THEME: "bootstrap"
    ports:
      - "8200:80"
    #
    # replacing deprecated 'links' with 'divseek' network?
    #
    #links:
    #  - chado:postgres
    networks:
      divseek:
    depends_on:
      - chado
      - elasticsearch

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.5.1
    environment:
      TAKE_FILE_OWNERSHIP: "true"
    networks:
      divseek:
    volumes:
      - ../volumes/index:/usr/share/elasticsearch/data

  jbrowse:
    image: quay.io/galaxy-genome-annotation/jbrowse:v1.12.5
    networks:
        divseek:
    depends_on:
        - galaxy
    volumes:
      - "../volumes/galaxy:/export"
      - "./galaxy.ini:/etc/galaxy/galaxy.ini"

  #
  # Alternate jbrowse configuration? (from docker-tripal experiment?)
  # Not using it because of uncertainty on how it would mesh with Galaxy?
  #
  # jbrowse:
  # image: quay.io/galaxy-genome-annotation/jbrowse:v1.16.2
  #  ports:
  #    - "8203:80"
  #  networks:
  #    divseek:
  #  volumes:
  #    - ../volumes/jbrowse/data:/data

  jbrowse-graphql:
    image: quay.io/galaxy-genome-annotation/jbrowse:v1.12.5
    networks:
      divseek:
    volumes:
        - "./jbgraphql:/data"

networks:
  divseek:
    driver: bridge
